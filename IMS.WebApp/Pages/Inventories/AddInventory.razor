@page "/addInventory"

@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager navigation

<PageTitle>Add Inventory</PageTitle>

<h3>Add Inventory</h3>
<br />
<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" @bind-Value="inventory.InventoryName"
                   class="form-control" >
                   </InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" @bind-Value="inventory.Quantity"
                   class="form-control" >
                   </InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" @bind-Value="inventory.Price"
                   class="form-control" >
                   </InputNumber>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>

</EditForm>   



@code {

    private Inventory inventory = new Inventory();
    private async void SaveInventory(){
        await AddInventoryUseCase.ExecuteAsync(inventory);
        navigation.NavigateTo("/inventories");
    }
    private void Cancel(){
        navigation.NavigateTo("/inventories");
    }
}
